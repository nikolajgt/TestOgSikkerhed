@page "/createfile"
@inject IJSRuntime JsRuntime

<PageTitle>Create File (Page Title)</PageTitle>

<h1>Create File</h1>


<button class="btn btn-primary" @onclick="CreateFileOnServer">Click me</button>

@code {
    int count;

    string fileName_Windows = "C:\\Users\\jbo\\Documents\\Github\\Skole\\TestOgSikkerhed\\FileDownloads\\TestFile.txt";
    string fileName_Linux = "//usr//bin//FileDownloads";
    string fileName_Initial = "";
    string fileName_Current = "";

    private void CreateFileOnServer()
    {


        if (OperatingSystem.IsWindows())
        {
            fileName_Initial = fileName_Windows;
            fileName_Current = fileName_Windows;
        }
        else
        if (OperatingSystem.IsLinux())
        {
            fileName_Initial = fileName_Linux;
            fileName_Current = fileName_Linux;
        }
        else
        if (OperatingSystem.IsMacOS())
        {
            JsRuntime.InvokeVoidAsync("alert", "Error: MacOS not supported."); // Alert
            Console.WriteLine("Error: MacOS not supported.");
            // Evt. en message/toast/dialog i brugerfladen også?
        }


        while (File.Exists(fileName_Current))
        {
            count++;
            fileName_Current = Path.GetDirectoryName(fileName_Initial)
                     + Path.DirectorySeparatorChar
                     + Path.GetFileNameWithoutExtension(fileName_Initial)
                     + count.ToString()
                     + Path.GetExtension(fileName_Initial);
        }

        FileInfo MyFile = new FileInfo(fileName_Current);
        if (MyFile.Exists == false)
        {
            FileStream fs = MyFile.Create();
            fs.Close();

            if (File.Exists(fileName_Current))
            {
                JsRuntime.InvokeVoidAsync("alert", "A file was successfully created on the server!"); // Alert
            }
            
        }
    }

    public static class OperatingSystem
    {
        public static bool IsWindows() =>
            RuntimeInformation.IsOSPlatform(OSPlatform.Windows);

        public static bool IsLinux() =>
            RuntimeInformation.IsOSPlatform(OSPlatform.Linux);

        public static bool IsMacOS() =>
            RuntimeInformation.IsOSPlatform(OSPlatform.OSX);
    }

}

